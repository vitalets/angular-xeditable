/*!
angular-xeditable - 0.1.0
Edit-in-place for angular.js
Build date: 2013-09-05 
*/
angular.module("xeditable",[]).value("editableOptions",{theme:"default"}),angular.module("xeditable").factory("editableController",function(){function a(a,b,c,d,e,f,g,h,i){var j,k,l=this;l.scope=a,l.elem=c,l.attrs=b,l.inputEl=null,l.editorEl=null,l.hasForm=!1,l.error="",l.theme=e[f.theme]||e["default"],l.parent={},l.inputTpl="",l.directiveName="",l.init=function(c){if(l.hasForm=c,l.name=b.eName||b[l.directiveName],!b[l.directiveName])throw"You should provide value for `"+l.directiveName+"` in editable element!";j=d(b[l.directiveName]),l.render(),b.eName&&l.scope.$watch("$data",function(a){l.scope.$form.$data[b.eName]=a}),b.onshow&&(l.onshow=function(){return l.catchError(d(b.onshow)(a))}),b.onbeforesave&&(l.onbeforesave=function(){return l.catchError(d(b.onbeforesave)(a))}),b.onaftersave&&(l.onaftersave=function(){return l.catchError(d(b.onaftersave)(a))})},l.render=function(){var a=l.theme;l.inputEl=angular.element(l.inputTpl),l.controlsEl=angular.element(a.controlsTpl),l.controlsEl.append(l.inputEl),l.hasForm||(l.buttonsEl=angular.element(a.buttonsTpl),l.submitEl=angular.element(a.submitTpl),l.cancelEl=angular.element(a.cancelTpl),l.buttonsEl.append(l.submitEl).append(l.cancelEl),l.controlsEl.append(l.buttonsEl)),l.errorEl=angular.element(a.errorTpl),l.controlsEl.append(l.errorEl),l.editorEl=angular.element(l.hasForm?a.noformTpl:a.formTpl),l.editorEl.append(l.controlsEl);for(var c in b.$attr)if("eForm"!==c&&"eNgSubmit"!==c&&"e"===c.substring(0,1)&&c.substring(1,2)===c.substring(1,2).toUpperCase()){var d=b.$attr[c].substring(2),e=""===b[c]?d:b[c];l.inputEl.attr(d,e)}l.inputEl.attr("ng-model","$data"),l.hasForm||l.editorEl.attr("editable-form","$form"),angular.isFunction(a.postrender)&&a.postrender.call(l)},l.show=function(){return l.scope.$data=angular.copy(j(a.$parent)),c.after(l.editorEl),h(l.editorEl)(a),c.addClass("ng-hide"),l.onshow()},l.hide=function(){l.editorEl.remove(),c.removeClass("ng-hide")},l.setWaiting=function(a){a?(k=!l.inputEl.attr("disabled"),k&&(l.inputEl.attr("disabled","disabled"),l.buttonsEl&&l.buttonsEl.find("button").attr("disabled","disabled"))):k&&(l.inputEl.removeAttr("disabled"),l.buttonsEl&&l.buttonsEl.find("button").removeAttr("disabled"))},l.activate=function(){setTimeout(function(){l.inputEl[0].focus()},0)},l.setError=function(b){angular.isObject(b)||(a.$error=b,l.error=b)},l.catchError=function(a,b){return angular.isObject(a)&&b!==!0?i.when(a).then(angular.bind(this,function(a){this.catchError(a,!0)}),angular.bind(this,function(a){this.catchError(a,!0)})):b&&angular.isObject(a)&&a.status&&200!==a.status&&a.data&&angular.isString(a.data)?(this.setError(a.data),a=a.data):angular.isString(a)&&this.setError(a),a},l.save=function(){j.assign(a.$parent,angular.copy(l.scope.$data))},l.onshow=angular.noop,l.onbeforesave=angular.noop,l.onaftersave=angular.noop}return a.$invect=["$scope","$attrs","$element","$parse","editableThemes","editableOptions","$rootScope","$compile","$q"],a}),angular.module("xeditable").factory("editableDirectiveFactory",function(a,b,c,d,e,f,g){return function(b){return{restrict:"A",scope:!0,require:[b.directiveName,"?^form"],controller:f,link:function(c,f,h,i){var j,k=i[0],l=!1;if(i[1])j=i[1],l=!0;else if(h.eForm){var m=a(h.eForm)(c);if(m)j=m,l=!0;else for(var n=0;n<e[0].forms.length;n++)if(e[0].forms[n].name===h.eForm){j=null,l=!0;break}}if(angular.forEach(b,function(a,b){void 0!==k[b]&&(k.parent[b]=k[b])}),angular.extend(k,b),k.init(l),c.$editable=k,l)if(j){if(c.$form=j,!c.$form.$addEditable)throw"Form with editable elements should have `editable-form` attribute.";c.$form.$addEditable(k)}else d.$$editableBuffer=d.$$editableBuffer||{},d.$$editableBuffer[h.eForm]=d.$$editableBuffer[h.eForm]||[],d.$$editableBuffer[h.eForm].push(k),c.$form=null;else c.$form=g(),c.$form.$addEditable(k),h.eForm&&(c.$parent[h.eForm]=c.$form),h.eForm||(f.addClass("editable-click"),f.bind("click",function(a){a.preventDefault(),c.$apply(function(){c.$form.$show()})}))}}}}),angular.module("xeditable").directive("editableText",function(a){return a({directiveName:"editableText",inputTpl:'<input type="text">'})}),angular.module("xeditable").directive("editableSelect",function(a){return a({directiveName:"editableSelect",inputTpl:"<select></select>"})}),angular.module("xeditable").directive("editableTextarea",function(a){return a({directiveName:"editableTextarea",inputTpl:'<textarea ng-keydown="$editable.keydown($event)"></textarea>',keydown:function(a){a.ctrlKey&&13===a.keyCode&&this.scope.$form.$submit()}})}),angular.module("xeditable").directive("editableCheckbox",function(a){return a({directiveName:"editableCheckbox",inputTpl:'<input type="checkbox">',render:function(){this.parent.render.call(this),this.attrs.title&&(this.inputEl.wrap("<label></label>"),this.inputEl.after(angular.element("<span></span>").text(" "+this.attrs.title)))}})}),angular.module("xeditable").factory("editableFormController",function(a,b){var c={$addEditable:function(a){this.$editables.push(a),a.elem.on("$destroy",angular.bind(this,this.$removeEditable,a)),a.scope.$form||(a.scope.$form=this)},$removeEditable:function(a){var b=this.$editables.indexOf(a);b>1&&this.$editables.splice(b,1)},$show:function(){this.$visible=!0;var a=b();a.when(this.$onshow()),this.$setError(null,""),angular.forEach(this.$editables,function(b){a.when(b.show())}),a.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$activate),onFalse:angular.bind(this,this.$activate),onString:angular.bind(this,this.$activate)})},$activate:function(a){var b;if(this.$editables.length){if(angular.isString(a))for(b=0;b<this.$editables.length;b++)if(this.$editables[b].name===a)return this.$editables[b].activate(),void 0;for(b=0;b<this.$editables.length;b++)if(this.$editables[b].error)return this.$editables[b].activate(),void 0;this.$editables[0].activate()}},$hide:function(){this.$visible=!1,angular.forEach(this.$editables,function(a){a.hide()})},$setWaiting:function(a){this.$waiting=!!a,angular.forEach(this.$editables,function(b){b.setWaiting(!!a)})},$setError:function(a,b){angular.forEach(this.$editables,function(c){a&&c.name!==a||c.setError(b)})},$submit:function(){function a(a){var c=b();c.when(this.$onbeforesave()),c.then({onWait:angular.bind(this,this.$setWaiting),onTrue:a?angular.bind(this,this.$save):angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})}this.$setError(null,"");var c=b();angular.forEach(this.$editables,function(a){c.when(a.onbeforesave())}),c.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,a,!0),onFalse:angular.bind(this,a,!1),onString:angular.bind(this,this.$activate)})},$save:function(){angular.forEach(this.$editables,function(a){a.save()});var a=b();a.when(this.$onaftersave()),angular.forEach(this.$editables,function(b){a.when(b.onaftersave())}),a.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})},$onshow:angular.noop,$onbeforesave:angular.noop,$onaftersave:angular.noop};return function(){return angular.extend({$editables:[],$visible:!1,$waiting:!1,$data:{}},c)}}),angular.module("xeditable").directive("editableForm",function(a,b,c){return{restrict:"A",require:["form"],compile:function(){return{pre:function(b,d,e,f){var g,h=f[0];e.editableForm?b[e.editableForm]&&b[e.editableForm].$show?(g=b[e.editableForm],angular.extend(h,g)):(g=c(),b[e.editableForm]=g,angular.extend(g,h)):(g=c(),angular.extend(h,g));var i=a.$$editableBuffer,j=h.$name;j&&i&&i[j]&&(angular.forEach(i[j],function(a){g.$addEditable(a)}),delete i[j])},post:function(a,c,d,e){var f;f=d.editableForm&&a[d.editableForm]&&a[d.editableForm].$show?a[d.editableForm]:e[0],d.onshow&&(f.$onshow=angular.bind(f,b(d.onshow),a)),d.ngSubmit||d.submit||(d.onbeforesave&&(f.$onbeforesave=function(){return b(d.onbeforesave)(a,{$data:f.$data})}),d.onaftersave&&(f.$onaftersave=function(){return b(d.onaftersave)(a,{$data:f.$data})}),c.on("submit",function(b){b.preventDefault(),a.$apply(function(){f.$submit()})}))}}}}}),angular.module("xeditable").factory("editablePromiseCollection",function(a){function b(){return{promises:[],hasFalse:!1,hasString:!1,when:function(b,c){if(b===!1)this.hasFalse=!0;else if(!c&&angular.isObject(b))this.promises.push(a.when(b));else{if(!angular.isString(b))return;this.hasString=!0}},then:function(b){function c(){h.hasString||h.hasFalse?!h.hasString&&h.hasFalse?e():f():d()}b=b||{};var d=b.onTrue||angular.noop,e=b.onFalse||angular.noop,f=b.onString||angular.noop,g=b.onWait||angular.noop,h=this;this.promises.length?(g(!0),a.all(this.promises).then(function(a){g(!1),angular.forEach(a,function(a){h.when(a,!0)}),c()},function(){g(!1),f()})):c()}}}return b}),angular.module("xeditable").factory("editableThemes",function(){var a={"default":{formTpl:'<form class="editable-wrap"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<span class="editable-controls"></span>',inputTpl:"",errorTpl:'<div class="editable-error" ng-show="$error">{{$error}}</div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit">save</button>',cancelTpl:'<button type="button" ng-click="$form.$hide()">cancel</button>'},bs2:{formTpl:'<form class="form-inline editable-wrap" role="form"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<div class="editable-controls controls control-group" ng-class="{\'error\': $error}"></div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error">{{$error}}</div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit" class="btn btn-primary"><span class="icon-ok icon-white"></span></button>',cancelTpl:'<button type="button" class="btn" ng-click="$form.$hide()"><span class="icon-remove"></span></button>'},bs3:{formTpl:'<form class="form-inline editable-wrap" role="form"></form>',noformTpl:'<span class="editable-wrap"></span>',controlsTpl:'<div class="editable-controls form-group" ng-class="{\'has-error\': $error}"></div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error">{{$error}}</div>',buttonsTpl:'<span class="editable-buttons"></span>',submitTpl:'<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-ok"></span></button>',cancelTpl:'<button type="button" class="btn btn-default" ng-click="$form.$hide()"><span class="glyphicon glyphicon-remove"></span></button>',buttonsClass:"",inputClass:"",postrender:function(){switch(this.directiveName){case"editableText":case"editableSelect":case"editableTextarea":this.inputEl.addClass("form-control"),this.theme.inputClass&&this.inputEl.addClass(this.theme.inputClass)}this.buttonsEl&&this.theme.buttonsClass&&this.buttonsEl.find("button").addClass(this.theme.buttonsClass)}}};return a});